// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  name         String
  passwordHash String
  role         String
  transactions Transaction[]
  receipts     Receipt[]
}

model Caixa {
  id             Int           @id @default(autoincrement())
  key            String        @unique
  name           String
  transactions   Transaction[]
  transferencias Transaction[] @relation("Transferencias")
}

model Transaction {
  id           Int       @id @default(autoincrement())
  type         String
  caixa        Caixa     @relation(fields: [caixaId], references: [id])
  caixaId      Int
  description  String?
  person       String?
  amount       Float
  date         DateTime
  transferTo   Caixa?    @relation("Transferencias", fields: [transferToId], references: [id])
  transferToId Int?
  user         User      @relation(fields: [userId], references: [id])
  userId       Int
  receipt      Receipt?
  createdAt    DateTime  @default(now())
}

model Receipt {
  id            Int          @id @default(autoincrement())
  name          String
  type          String
  amount        Float
  date          DateTime
  notes         String?
  user          User         @relation(fields: [userId], references: [id])
  userId        Int
  transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId Int?         @unique
  createdAt     DateTime     @default(now())
}

model ChurchData {
  id      Int     @id @default(autoincrement())
  name    String?
  address String?
  phone   String?
  email   String?
  cnpj    String?
  logoUrl String?
}
